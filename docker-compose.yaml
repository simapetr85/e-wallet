version: "3.7"

services:
  postgresql:
    build: ./db/PostgreSQL
    environment:
      - "POSTGRES_USER=docker"
      - "POSTGRES_PASSWORD=docker"
      - "POSTGRES_DB=docker"

  app:
    build: ./microservices/test-app
    ports:
      - "8080:8080"

  zookeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
  #    ZOO_SERVERS: server.1=zookeper1:2888:3888 server.2=zookeper2:2888:3888

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "7203:7203"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeper:2181
      KAFKA_ADVERTISED_HOST_NAME: localhost
      # KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1:compact"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      ALLOW_ANONYMOUS_LOGIN: "true"
    depends_on:
      - zookeper

  kafka-manager:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      JVM_OPTS: "-Xms32M -Xmx64M"
      KAFKA_BROKERCONNECT: kafka:9094
      SERVER_SERVLET_CONTEXTPATH: "/"

  # TODO
  # kafka-consumer:
  #   build: ./microservices/kafka-consumer
  #   ports:
  #     - "8080:8081"

  # TODO
  # kafka-producer:
  #   build: ./microservices/kafka-producer
  #   ports:
  #     - "8080:8082"
